/**
 * Клас, який допомагає обчислювати числа Люка та перевіряти, чи підходять вони під правило w^3 + 1.
 * Тут ми створюємо об'єкти для роботи з послідовністю, де кожне нове число залежить від суми двох попередніх.
 */
class luc {
    /** Зберігає номер позиції числа в послідовності, починаючи з 1. */
    int p;

    /** Зберігає саме значення числа Люка для заданої позиції. */
    long v;

    /**
     * Створює новий об'єкт із заданою позицією та одразу обчислює відповідне число Люка.
     * @param p Номер позиції в послідовності, має бути більше 0.
     */
    luc(int p) {
        this.p = p;
        this.v = calc(p);
    }

    /**
     * Розраховує число Люка для вказаної позиції.
     * Починаємо з 1 і 3, а потім додаємо попередні два числа для наступних.
     * Якщо позиція менше або дорівнює 0, повертаємо 0.
     * @param p Номер позиції в послідовності.
     * @return Число Люка для даної позиції або 0, якщо позиція неправильна.
     */
    long calc(int p) {
        if (p <= 0) return 0;
        if (p == 1) return 1;
        if (p == 2) return 3;
        long a = 1, b = 3, c = 0;
        for (int i = 3; i <= p; i++) {
            c = a + b;
            a = b;
            b = c;
        }
        return c;
    }

    /**
     * Дивиться, чи можна поточне число Люка записати як w^3 + 1, де w — ціле число.
     * Перевіряє всі можливі w до кубічного кореня числа.
     * @return true, якщо число відповідає умові, інакше false.
     */
    boolean cub() {
        long n = this.v;
        for (int w = 0; w <= Math.cbrt(n); w++)
            if (n == (long)Math.pow(w, 3) + 1) return true;
        return false;
    }
}

/**
 * Основний клас, який запускає програму та працює з числами Люка.
 * Тут ми просимо користувача ввести кількість чисел і показуємо результати.
 */
public class Laba1 {
    /**
     * Початок роботи програми, де ми визначаємо, скільки чисел Люка обробляти.
     * Можна вказати число через командний рядок або ввести його вручну.
     * Потім виводимо всі числа та підраховуємо, скільки з них підходять під w^3 + 1.
     * @param args Список аргументів з командного рядка, перший з яких — кількість чисел.
     */
    public static void main(String[] args) {
        int n = 0;
        if (args.length > 0) n = Integer.parseInt(args[0]);
        else {
            java.util.Scanner s = new java.util.Scanner(System.in);
            System.out.print("Кількість: ");
            n = s.nextInt();
            s.close();
        }
        int c = 0;
        for (int i = 1; i <= n; i++) {
            luc l = new luc(i);
            System.out.println("Число " + i + ": " + l.v);
            if (l.cub()) c++;
        }
        System.out.println("Кількість чисел (w^3 + 1): " + c);
    }
}